//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Infocorp.TITA.SilverlightUI.WSTitaReference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTIssue", Namespace="http://tempuri.org/")]
    public partial class DTIssue : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.Generic.List<Infocorp.TITA.SilverlightUI.WSTitaReference.DTAttachment> AttachmentsField;
        
        private System.Collections.Generic.List<Infocorp.TITA.SilverlightUI.WSTitaReference.DTField> FieldsField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Collections.Generic.List<Infocorp.TITA.SilverlightUI.WSTitaReference.DTAttachment> Attachments {
            get {
                return this.AttachmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentsField, value) != true)) {
                    this.AttachmentsField = value;
                    this.RaisePropertyChanged("Attachments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Collections.Generic.List<Infocorp.TITA.SilverlightUI.WSTitaReference.DTField> Fields {
            get {
                return this.FieldsField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldsField, value) != true)) {
                    this.FieldsField = value;
                    this.RaisePropertyChanged("Fields");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTAttachment", Namespace="http://tempuri.org/")]
    public partial class DTAttachment : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string NameField;
        
        private byte[] DataField;
        
        private string UrlField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public byte[] Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTField", Namespace="http://tempuri.org/")]
    public partial class DTField : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string NameField;
        
        private Infocorp.TITA.SilverlightUI.WSTitaReference.Types TypeField;
        
        private bool RequiredField;
        
        private Infocorp.TITA.SilverlightUI.WSTitaReference.ArrayOfString ChoicesField;
        
        private string ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Infocorp.TITA.SilverlightUI.WSTitaReference.Types Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public bool Required {
            get {
                return this.RequiredField;
            }
            set {
                if ((this.RequiredField.Equals(value) != true)) {
                    this.RequiredField = value;
                    this.RaisePropertyChanged("Required");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public Infocorp.TITA.SilverlightUI.WSTitaReference.ArrayOfString Choices {
            get {
                return this.ChoicesField;
            }
            set {
                if ((object.ReferenceEquals(this.ChoicesField, value) != true)) {
                    this.ChoicesField = value;
                    this.RaisePropertyChanged("Choices");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Runtime.Serialization.DataContractAttribute(Name="Types", Namespace="http://tempuri.org/")]
    public enum Types : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Integer = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        String = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Choice = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Boolean = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DateTime = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Note = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        User = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Counter = 7,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArrayOfString", Namespace="http://tempuri.org/", ItemName="string")]
    public class ArrayOfString : System.Collections.Generic.List<string> {
    }
    
    [System.ServiceModel.ServiceContractAttribute()]
    public interface WSTitaSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetWPS", ReplyAction="*")]
        System.IAsyncResult BeginGetWPS(Infocorp.TITA.SilverlightUI.WSTitaReference.GetWPSRequest request, System.AsyncCallback callback, object asyncState);
        
        Infocorp.TITA.SilverlightUI.WSTitaReference.GetWPSResponse EndGetWPS(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetIssues", ReplyAction="*")]
        System.IAsyncResult BeginGetIssues(Infocorp.TITA.SilverlightUI.WSTitaReference.GetIssuesRequest request, System.AsyncCallback callback, object asyncState);
        
        Infocorp.TITA.SilverlightUI.WSTitaReference.GetIssuesResponse EndGetIssues(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AddIssue", ReplyAction="*")]
        System.IAsyncResult BeginAddIssue(Infocorp.TITA.SilverlightUI.WSTitaReference.AddIssueRequest request, System.AsyncCallback callback, object asyncState);
        
        Infocorp.TITA.SilverlightUI.WSTitaReference.AddIssueResponse EndAddIssue(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetIssueTemplate", ReplyAction="*")]
        System.IAsyncResult BeginGetIssueTemplate(Infocorp.TITA.SilverlightUI.WSTitaReference.GetIssueTemplateRequest request, System.AsyncCallback callback, object asyncState);
        
        Infocorp.TITA.SilverlightUI.WSTitaReference.GetIssueTemplateResponse EndGetIssueTemplate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ModifyIssue", ReplyAction="*")]
        System.IAsyncResult BeginModifyIssue(Infocorp.TITA.SilverlightUI.WSTitaReference.ModifyIssueRequest request, System.AsyncCallback callback, object asyncState);
        
        Infocorp.TITA.SilverlightUI.WSTitaReference.ModifyIssueResponse EndModifyIssue(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DeleteIssue", ReplyAction="*")]
        System.IAsyncResult BeginDeleteIssue(int id, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteIssue(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetWPSRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetWPS", Namespace="http://tempuri.org/", Order=0)]
        public Infocorp.TITA.SilverlightUI.WSTitaReference.GetWPSRequestBody Body;
        
        public GetWPSRequest() {
        }
        
        public GetWPSRequest(Infocorp.TITA.SilverlightUI.WSTitaReference.GetWPSRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class GetWPSRequestBody {
        
        public GetWPSRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetWPSResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetWPSResponse", Namespace="http://tempuri.org/", Order=0)]
        public Infocorp.TITA.SilverlightUI.WSTitaReference.GetWPSResponseBody Body;
        
        public GetWPSResponse() {
        }
        
        public GetWPSResponse(Infocorp.TITA.SilverlightUI.WSTitaReference.GetWPSResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetWPSResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.Generic.List<Infocorp.TITA.SilverlightUI.WSTitaReference.DTIssue> GetWPSResult;
        
        public GetWPSResponseBody() {
        }
        
        public GetWPSResponseBody(System.Collections.Generic.List<Infocorp.TITA.SilverlightUI.WSTitaReference.DTIssue> GetWPSResult) {
            this.GetWPSResult = GetWPSResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetIssuesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetIssues", Namespace="http://tempuri.org/", Order=0)]
        public Infocorp.TITA.SilverlightUI.WSTitaReference.GetIssuesRequestBody Body;
        
        public GetIssuesRequest() {
        }
        
        public GetIssuesRequest(Infocorp.TITA.SilverlightUI.WSTitaReference.GetIssuesRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class GetIssuesRequestBody {
        
        public GetIssuesRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetIssuesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetIssuesResponse", Namespace="http://tempuri.org/", Order=0)]
        public Infocorp.TITA.SilverlightUI.WSTitaReference.GetIssuesResponseBody Body;
        
        public GetIssuesResponse() {
        }
        
        public GetIssuesResponse(Infocorp.TITA.SilverlightUI.WSTitaReference.GetIssuesResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetIssuesResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.Generic.List<Infocorp.TITA.SilverlightUI.WSTitaReference.DTIssue> GetIssuesResult;
        
        public GetIssuesResponseBody() {
        }
        
        public GetIssuesResponseBody(System.Collections.Generic.List<Infocorp.TITA.SilverlightUI.WSTitaReference.DTIssue> GetIssuesResult) {
            this.GetIssuesResult = GetIssuesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddIssueRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddIssue", Namespace="http://tempuri.org/", Order=0)]
        public Infocorp.TITA.SilverlightUI.WSTitaReference.AddIssueRequestBody Body;
        
        public AddIssueRequest() {
        }
        
        public AddIssueRequest(Infocorp.TITA.SilverlightUI.WSTitaReference.AddIssueRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class AddIssueRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public Infocorp.TITA.SilverlightUI.WSTitaReference.DTIssue issue;
        
        public AddIssueRequestBody() {
        }
        
        public AddIssueRequestBody(Infocorp.TITA.SilverlightUI.WSTitaReference.DTIssue issue) {
            this.issue = issue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddIssueResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddIssueResponse", Namespace="http://tempuri.org/", Order=0)]
        public Infocorp.TITA.SilverlightUI.WSTitaReference.AddIssueResponseBody Body;
        
        public AddIssueResponse() {
        }
        
        public AddIssueResponse(Infocorp.TITA.SilverlightUI.WSTitaReference.AddIssueResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class AddIssueResponseBody {
        
        public AddIssueResponseBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetIssueTemplateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetIssueTemplate", Namespace="http://tempuri.org/", Order=0)]
        public Infocorp.TITA.SilverlightUI.WSTitaReference.GetIssueTemplateRequestBody Body;
        
        public GetIssueTemplateRequest() {
        }
        
        public GetIssueTemplateRequest(Infocorp.TITA.SilverlightUI.WSTitaReference.GetIssueTemplateRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class GetIssueTemplateRequestBody {
        
        public GetIssueTemplateRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetIssueTemplateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetIssueTemplateResponse", Namespace="http://tempuri.org/", Order=0)]
        public Infocorp.TITA.SilverlightUI.WSTitaReference.GetIssueTemplateResponseBody Body;
        
        public GetIssueTemplateResponse() {
        }
        
        public GetIssueTemplateResponse(Infocorp.TITA.SilverlightUI.WSTitaReference.GetIssueTemplateResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetIssueTemplateResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public Infocorp.TITA.SilverlightUI.WSTitaReference.DTIssue GetIssueTemplateResult;
        
        public GetIssueTemplateResponseBody() {
        }
        
        public GetIssueTemplateResponseBody(Infocorp.TITA.SilverlightUI.WSTitaReference.DTIssue GetIssueTemplateResult) {
            this.GetIssueTemplateResult = GetIssueTemplateResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ModifyIssueRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ModifyIssue", Namespace="http://tempuri.org/", Order=0)]
        public Infocorp.TITA.SilverlightUI.WSTitaReference.ModifyIssueRequestBody Body;
        
        public ModifyIssueRequest() {
        }
        
        public ModifyIssueRequest(Infocorp.TITA.SilverlightUI.WSTitaReference.ModifyIssueRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class ModifyIssueRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public Infocorp.TITA.SilverlightUI.WSTitaReference.DTIssue issue;
        
        public ModifyIssueRequestBody() {
        }
        
        public ModifyIssueRequestBody(Infocorp.TITA.SilverlightUI.WSTitaReference.DTIssue issue) {
            this.issue = issue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ModifyIssueResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ModifyIssueResponse", Namespace="http://tempuri.org/", Order=0)]
        public Infocorp.TITA.SilverlightUI.WSTitaReference.ModifyIssueResponseBody Body;
        
        public ModifyIssueResponse() {
        }
        
        public ModifyIssueResponse(Infocorp.TITA.SilverlightUI.WSTitaReference.ModifyIssueResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class ModifyIssueResponseBody {
        
        public ModifyIssueResponseBody() {
        }
    }
    
    public interface WSTitaSoapChannel : Infocorp.TITA.SilverlightUI.WSTitaReference.WSTitaSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class GetWPSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetWPSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Infocorp.TITA.SilverlightUI.WSTitaReference.DTIssue> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Infocorp.TITA.SilverlightUI.WSTitaReference.DTIssue>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class GetIssuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetIssuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Infocorp.TITA.SilverlightUI.WSTitaReference.DTIssue> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Infocorp.TITA.SilverlightUI.WSTitaReference.DTIssue>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class GetIssueTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetIssueTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Infocorp.TITA.SilverlightUI.WSTitaReference.DTIssue Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Infocorp.TITA.SilverlightUI.WSTitaReference.DTIssue)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class WSTitaSoapClient : System.ServiceModel.ClientBase<Infocorp.TITA.SilverlightUI.WSTitaReference.WSTitaSoap>, Infocorp.TITA.SilverlightUI.WSTitaReference.WSTitaSoap {
        
        private BeginOperationDelegate onBeginGetWPSDelegate;
        
        private EndOperationDelegate onEndGetWPSDelegate;
        
        private System.Threading.SendOrPostCallback onGetWPSCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetIssuesDelegate;
        
        private EndOperationDelegate onEndGetIssuesDelegate;
        
        private System.Threading.SendOrPostCallback onGetIssuesCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddIssueDelegate;
        
        private EndOperationDelegate onEndAddIssueDelegate;
        
        private System.Threading.SendOrPostCallback onAddIssueCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetIssueTemplateDelegate;
        
        private EndOperationDelegate onEndGetIssueTemplateDelegate;
        
        private System.Threading.SendOrPostCallback onGetIssueTemplateCompletedDelegate;
        
        private BeginOperationDelegate onBeginModifyIssueDelegate;
        
        private EndOperationDelegate onEndModifyIssueDelegate;
        
        private System.Threading.SendOrPostCallback onModifyIssueCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteIssueDelegate;
        
        private EndOperationDelegate onEndDeleteIssueDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteIssueCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public WSTitaSoapClient() {
        }
        
        public WSTitaSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WSTitaSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSTitaSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSTitaSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetWPSCompletedEventArgs> GetWPSCompleted;
        
        public event System.EventHandler<GetIssuesCompletedEventArgs> GetIssuesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddIssueCompleted;
        
        public event System.EventHandler<GetIssueTemplateCompletedEventArgs> GetIssueTemplateCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ModifyIssueCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteIssueCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        System.IAsyncResult Infocorp.TITA.SilverlightUI.WSTitaReference.WSTitaSoap.BeginGetWPS(Infocorp.TITA.SilverlightUI.WSTitaReference.GetWPSRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetWPS(request, callback, asyncState);
        }
        
        private System.IAsyncResult BeginGetWPS(System.AsyncCallback callback, object asyncState) {
            Infocorp.TITA.SilverlightUI.WSTitaReference.GetWPSRequest inValue = new Infocorp.TITA.SilverlightUI.WSTitaReference.GetWPSRequest();
            inValue.Body = new Infocorp.TITA.SilverlightUI.WSTitaReference.GetWPSRequestBody();
            return ((Infocorp.TITA.SilverlightUI.WSTitaReference.WSTitaSoap)(this)).BeginGetWPS(inValue, callback, asyncState);
        }
        
        Infocorp.TITA.SilverlightUI.WSTitaReference.GetWPSResponse Infocorp.TITA.SilverlightUI.WSTitaReference.WSTitaSoap.EndGetWPS(System.IAsyncResult result) {
            return base.Channel.EndGetWPS(result);
        }
        
        private System.Collections.Generic.List<Infocorp.TITA.SilverlightUI.WSTitaReference.DTIssue> EndGetWPS(System.IAsyncResult result) {
            Infocorp.TITA.SilverlightUI.WSTitaReference.GetWPSResponse retVal = ((Infocorp.TITA.SilverlightUI.WSTitaReference.WSTitaSoap)(this)).EndGetWPS(result);
            return retVal.Body.GetWPSResult;
        }
        
        private System.IAsyncResult OnBeginGetWPS(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetWPS(callback, asyncState);
        }
        
        private object[] OnEndGetWPS(System.IAsyncResult result) {
            System.Collections.Generic.List<Infocorp.TITA.SilverlightUI.WSTitaReference.DTIssue> retVal = this.EndGetWPS(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetWPSCompleted(object state) {
            if ((this.GetWPSCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetWPSCompleted(this, new GetWPSCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetWPSAsync() {
            this.GetWPSAsync(null);
        }
        
        public void GetWPSAsync(object userState) {
            if ((this.onBeginGetWPSDelegate == null)) {
                this.onBeginGetWPSDelegate = new BeginOperationDelegate(this.OnBeginGetWPS);
            }
            if ((this.onEndGetWPSDelegate == null)) {
                this.onEndGetWPSDelegate = new EndOperationDelegate(this.OnEndGetWPS);
            }
            if ((this.onGetWPSCompletedDelegate == null)) {
                this.onGetWPSCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetWPSCompleted);
            }
            base.InvokeAsync(this.onBeginGetWPSDelegate, null, this.onEndGetWPSDelegate, this.onGetWPSCompletedDelegate, userState);
        }
        
        System.IAsyncResult Infocorp.TITA.SilverlightUI.WSTitaReference.WSTitaSoap.BeginGetIssues(Infocorp.TITA.SilverlightUI.WSTitaReference.GetIssuesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetIssues(request, callback, asyncState);
        }
        
        private System.IAsyncResult BeginGetIssues(System.AsyncCallback callback, object asyncState) {
            Infocorp.TITA.SilverlightUI.WSTitaReference.GetIssuesRequest inValue = new Infocorp.TITA.SilverlightUI.WSTitaReference.GetIssuesRequest();
            inValue.Body = new Infocorp.TITA.SilverlightUI.WSTitaReference.GetIssuesRequestBody();
            return ((Infocorp.TITA.SilverlightUI.WSTitaReference.WSTitaSoap)(this)).BeginGetIssues(inValue, callback, asyncState);
        }
        
        Infocorp.TITA.SilverlightUI.WSTitaReference.GetIssuesResponse Infocorp.TITA.SilverlightUI.WSTitaReference.WSTitaSoap.EndGetIssues(System.IAsyncResult result) {
            return base.Channel.EndGetIssues(result);
        }
        
        private System.Collections.Generic.List<Infocorp.TITA.SilverlightUI.WSTitaReference.DTIssue> EndGetIssues(System.IAsyncResult result) {
            Infocorp.TITA.SilverlightUI.WSTitaReference.GetIssuesResponse retVal = ((Infocorp.TITA.SilverlightUI.WSTitaReference.WSTitaSoap)(this)).EndGetIssues(result);
            return retVal.Body.GetIssuesResult;
        }
        
        private System.IAsyncResult OnBeginGetIssues(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetIssues(callback, asyncState);
        }
        
        private object[] OnEndGetIssues(System.IAsyncResult result) {
            System.Collections.Generic.List<Infocorp.TITA.SilverlightUI.WSTitaReference.DTIssue> retVal = this.EndGetIssues(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetIssuesCompleted(object state) {
            if ((this.GetIssuesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetIssuesCompleted(this, new GetIssuesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetIssuesAsync() {
            this.GetIssuesAsync(null);
        }
        
        public void GetIssuesAsync(object userState) {
            if ((this.onBeginGetIssuesDelegate == null)) {
                this.onBeginGetIssuesDelegate = new BeginOperationDelegate(this.OnBeginGetIssues);
            }
            if ((this.onEndGetIssuesDelegate == null)) {
                this.onEndGetIssuesDelegate = new EndOperationDelegate(this.OnEndGetIssues);
            }
            if ((this.onGetIssuesCompletedDelegate == null)) {
                this.onGetIssuesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetIssuesCompleted);
            }
            base.InvokeAsync(this.onBeginGetIssuesDelegate, null, this.onEndGetIssuesDelegate, this.onGetIssuesCompletedDelegate, userState);
        }
        
        System.IAsyncResult Infocorp.TITA.SilverlightUI.WSTitaReference.WSTitaSoap.BeginAddIssue(Infocorp.TITA.SilverlightUI.WSTitaReference.AddIssueRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddIssue(request, callback, asyncState);
        }
        
        private System.IAsyncResult BeginAddIssue(Infocorp.TITA.SilverlightUI.WSTitaReference.DTIssue issue, System.AsyncCallback callback, object asyncState) {
            Infocorp.TITA.SilverlightUI.WSTitaReference.AddIssueRequest inValue = new Infocorp.TITA.SilverlightUI.WSTitaReference.AddIssueRequest();
            inValue.Body = new Infocorp.TITA.SilverlightUI.WSTitaReference.AddIssueRequestBody();
            inValue.Body.issue = issue;
            return ((Infocorp.TITA.SilverlightUI.WSTitaReference.WSTitaSoap)(this)).BeginAddIssue(inValue, callback, asyncState);
        }
        
        Infocorp.TITA.SilverlightUI.WSTitaReference.AddIssueResponse Infocorp.TITA.SilverlightUI.WSTitaReference.WSTitaSoap.EndAddIssue(System.IAsyncResult result) {
            return base.Channel.EndAddIssue(result);
        }
        
        private void EndAddIssue(System.IAsyncResult result) {
            Infocorp.TITA.SilverlightUI.WSTitaReference.AddIssueResponse retVal = ((Infocorp.TITA.SilverlightUI.WSTitaReference.WSTitaSoap)(this)).EndAddIssue(result);
        }
        
        private System.IAsyncResult OnBeginAddIssue(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Infocorp.TITA.SilverlightUI.WSTitaReference.DTIssue issue = ((Infocorp.TITA.SilverlightUI.WSTitaReference.DTIssue)(inValues[0]));
            return this.BeginAddIssue(issue, callback, asyncState);
        }
        
        private object[] OnEndAddIssue(System.IAsyncResult result) {
            this.EndAddIssue(result);
            return null;
        }
        
        private void OnAddIssueCompleted(object state) {
            if ((this.AddIssueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddIssueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddIssueAsync(Infocorp.TITA.SilverlightUI.WSTitaReference.DTIssue issue) {
            this.AddIssueAsync(issue, null);
        }
        
        public void AddIssueAsync(Infocorp.TITA.SilverlightUI.WSTitaReference.DTIssue issue, object userState) {
            if ((this.onBeginAddIssueDelegate == null)) {
                this.onBeginAddIssueDelegate = new BeginOperationDelegate(this.OnBeginAddIssue);
            }
            if ((this.onEndAddIssueDelegate == null)) {
                this.onEndAddIssueDelegate = new EndOperationDelegate(this.OnEndAddIssue);
            }
            if ((this.onAddIssueCompletedDelegate == null)) {
                this.onAddIssueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddIssueCompleted);
            }
            base.InvokeAsync(this.onBeginAddIssueDelegate, new object[] {
                        issue}, this.onEndAddIssueDelegate, this.onAddIssueCompletedDelegate, userState);
        }
        
        System.IAsyncResult Infocorp.TITA.SilverlightUI.WSTitaReference.WSTitaSoap.BeginGetIssueTemplate(Infocorp.TITA.SilverlightUI.WSTitaReference.GetIssueTemplateRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetIssueTemplate(request, callback, asyncState);
        }
        
        private System.IAsyncResult BeginGetIssueTemplate(System.AsyncCallback callback, object asyncState) {
            Infocorp.TITA.SilverlightUI.WSTitaReference.GetIssueTemplateRequest inValue = new Infocorp.TITA.SilverlightUI.WSTitaReference.GetIssueTemplateRequest();
            inValue.Body = new Infocorp.TITA.SilverlightUI.WSTitaReference.GetIssueTemplateRequestBody();
            return ((Infocorp.TITA.SilverlightUI.WSTitaReference.WSTitaSoap)(this)).BeginGetIssueTemplate(inValue, callback, asyncState);
        }
        
        Infocorp.TITA.SilverlightUI.WSTitaReference.GetIssueTemplateResponse Infocorp.TITA.SilverlightUI.WSTitaReference.WSTitaSoap.EndGetIssueTemplate(System.IAsyncResult result) {
            return base.Channel.EndGetIssueTemplate(result);
        }
        
        private Infocorp.TITA.SilverlightUI.WSTitaReference.DTIssue EndGetIssueTemplate(System.IAsyncResult result) {
            Infocorp.TITA.SilverlightUI.WSTitaReference.GetIssueTemplateResponse retVal = ((Infocorp.TITA.SilverlightUI.WSTitaReference.WSTitaSoap)(this)).EndGetIssueTemplate(result);
            return retVal.Body.GetIssueTemplateResult;
        }
        
        private System.IAsyncResult OnBeginGetIssueTemplate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetIssueTemplate(callback, asyncState);
        }
        
        private object[] OnEndGetIssueTemplate(System.IAsyncResult result) {
            Infocorp.TITA.SilverlightUI.WSTitaReference.DTIssue retVal = this.EndGetIssueTemplate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetIssueTemplateCompleted(object state) {
            if ((this.GetIssueTemplateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetIssueTemplateCompleted(this, new GetIssueTemplateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetIssueTemplateAsync() {
            this.GetIssueTemplateAsync(null);
        }
        
        public void GetIssueTemplateAsync(object userState) {
            if ((this.onBeginGetIssueTemplateDelegate == null)) {
                this.onBeginGetIssueTemplateDelegate = new BeginOperationDelegate(this.OnBeginGetIssueTemplate);
            }
            if ((this.onEndGetIssueTemplateDelegate == null)) {
                this.onEndGetIssueTemplateDelegate = new EndOperationDelegate(this.OnEndGetIssueTemplate);
            }
            if ((this.onGetIssueTemplateCompletedDelegate == null)) {
                this.onGetIssueTemplateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetIssueTemplateCompleted);
            }
            base.InvokeAsync(this.onBeginGetIssueTemplateDelegate, null, this.onEndGetIssueTemplateDelegate, this.onGetIssueTemplateCompletedDelegate, userState);
        }
        
        System.IAsyncResult Infocorp.TITA.SilverlightUI.WSTitaReference.WSTitaSoap.BeginModifyIssue(Infocorp.TITA.SilverlightUI.WSTitaReference.ModifyIssueRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginModifyIssue(request, callback, asyncState);
        }
        
        private System.IAsyncResult BeginModifyIssue(Infocorp.TITA.SilverlightUI.WSTitaReference.DTIssue issue, System.AsyncCallback callback, object asyncState) {
            Infocorp.TITA.SilverlightUI.WSTitaReference.ModifyIssueRequest inValue = new Infocorp.TITA.SilverlightUI.WSTitaReference.ModifyIssueRequest();
            inValue.Body = new Infocorp.TITA.SilverlightUI.WSTitaReference.ModifyIssueRequestBody();
            inValue.Body.issue = issue;
            return ((Infocorp.TITA.SilverlightUI.WSTitaReference.WSTitaSoap)(this)).BeginModifyIssue(inValue, callback, asyncState);
        }
        
        Infocorp.TITA.SilverlightUI.WSTitaReference.ModifyIssueResponse Infocorp.TITA.SilverlightUI.WSTitaReference.WSTitaSoap.EndModifyIssue(System.IAsyncResult result) {
            return base.Channel.EndModifyIssue(result);
        }
        
        private void EndModifyIssue(System.IAsyncResult result) {
            Infocorp.TITA.SilverlightUI.WSTitaReference.ModifyIssueResponse retVal = ((Infocorp.TITA.SilverlightUI.WSTitaReference.WSTitaSoap)(this)).EndModifyIssue(result);
        }
        
        private System.IAsyncResult OnBeginModifyIssue(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Infocorp.TITA.SilverlightUI.WSTitaReference.DTIssue issue = ((Infocorp.TITA.SilverlightUI.WSTitaReference.DTIssue)(inValues[0]));
            return this.BeginModifyIssue(issue, callback, asyncState);
        }
        
        private object[] OnEndModifyIssue(System.IAsyncResult result) {
            this.EndModifyIssue(result);
            return null;
        }
        
        private void OnModifyIssueCompleted(object state) {
            if ((this.ModifyIssueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ModifyIssueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ModifyIssueAsync(Infocorp.TITA.SilverlightUI.WSTitaReference.DTIssue issue) {
            this.ModifyIssueAsync(issue, null);
        }
        
        public void ModifyIssueAsync(Infocorp.TITA.SilverlightUI.WSTitaReference.DTIssue issue, object userState) {
            if ((this.onBeginModifyIssueDelegate == null)) {
                this.onBeginModifyIssueDelegate = new BeginOperationDelegate(this.OnBeginModifyIssue);
            }
            if ((this.onEndModifyIssueDelegate == null)) {
                this.onEndModifyIssueDelegate = new EndOperationDelegate(this.OnEndModifyIssue);
            }
            if ((this.onModifyIssueCompletedDelegate == null)) {
                this.onModifyIssueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnModifyIssueCompleted);
            }
            base.InvokeAsync(this.onBeginModifyIssueDelegate, new object[] {
                        issue}, this.onEndModifyIssueDelegate, this.onModifyIssueCompletedDelegate, userState);
        }
        
        System.IAsyncResult Infocorp.TITA.SilverlightUI.WSTitaReference.WSTitaSoap.BeginDeleteIssue(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteIssue(id, callback, asyncState);
        }
        
        void Infocorp.TITA.SilverlightUI.WSTitaReference.WSTitaSoap.EndDeleteIssue(System.IAsyncResult result) {
            base.Channel.EndDeleteIssue(result);
        }
        
        private System.IAsyncResult OnBeginDeleteIssue(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return ((Infocorp.TITA.SilverlightUI.WSTitaReference.WSTitaSoap)(this)).BeginDeleteIssue(id, callback, asyncState);
        }
        
        private object[] OnEndDeleteIssue(System.IAsyncResult result) {
            ((Infocorp.TITA.SilverlightUI.WSTitaReference.WSTitaSoap)(this)).EndDeleteIssue(result);
            return null;
        }
        
        private void OnDeleteIssueCompleted(object state) {
            if ((this.DeleteIssueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteIssueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteIssueAsync(int id) {
            this.DeleteIssueAsync(id, null);
        }
        
        public void DeleteIssueAsync(int id, object userState) {
            if ((this.onBeginDeleteIssueDelegate == null)) {
                this.onBeginDeleteIssueDelegate = new BeginOperationDelegate(this.OnBeginDeleteIssue);
            }
            if ((this.onEndDeleteIssueDelegate == null)) {
                this.onEndDeleteIssueDelegate = new EndOperationDelegate(this.OnEndDeleteIssue);
            }
            if ((this.onDeleteIssueCompletedDelegate == null)) {
                this.onDeleteIssueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteIssueCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteIssueDelegate, new object[] {
                        id}, this.onEndDeleteIssueDelegate, this.onDeleteIssueCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Infocorp.TITA.SilverlightUI.WSTitaReference.WSTitaSoap CreateChannel() {
            return new WSTitaSoapClientChannel(this);
        }
        
        private class WSTitaSoapClientChannel : ChannelBase<Infocorp.TITA.SilverlightUI.WSTitaReference.WSTitaSoap>, Infocorp.TITA.SilverlightUI.WSTitaReference.WSTitaSoap {
            
            public WSTitaSoapClientChannel(System.ServiceModel.ClientBase<Infocorp.TITA.SilverlightUI.WSTitaReference.WSTitaSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetWPS(Infocorp.TITA.SilverlightUI.WSTitaReference.GetWPSRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetWPS", _args, callback, asyncState);
                return _result;
            }
            
            public Infocorp.TITA.SilverlightUI.WSTitaReference.GetWPSResponse EndGetWPS(System.IAsyncResult result) {
                object[] _args = new object[0];
                Infocorp.TITA.SilverlightUI.WSTitaReference.GetWPSResponse _result = ((Infocorp.TITA.SilverlightUI.WSTitaReference.GetWPSResponse)(base.EndInvoke("GetWPS", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetIssues(Infocorp.TITA.SilverlightUI.WSTitaReference.GetIssuesRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetIssues", _args, callback, asyncState);
                return _result;
            }
            
            public Infocorp.TITA.SilverlightUI.WSTitaReference.GetIssuesResponse EndGetIssues(System.IAsyncResult result) {
                object[] _args = new object[0];
                Infocorp.TITA.SilverlightUI.WSTitaReference.GetIssuesResponse _result = ((Infocorp.TITA.SilverlightUI.WSTitaReference.GetIssuesResponse)(base.EndInvoke("GetIssues", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddIssue(Infocorp.TITA.SilverlightUI.WSTitaReference.AddIssueRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("AddIssue", _args, callback, asyncState);
                return _result;
            }
            
            public Infocorp.TITA.SilverlightUI.WSTitaReference.AddIssueResponse EndAddIssue(System.IAsyncResult result) {
                object[] _args = new object[0];
                Infocorp.TITA.SilverlightUI.WSTitaReference.AddIssueResponse _result = ((Infocorp.TITA.SilverlightUI.WSTitaReference.AddIssueResponse)(base.EndInvoke("AddIssue", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetIssueTemplate(Infocorp.TITA.SilverlightUI.WSTitaReference.GetIssueTemplateRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetIssueTemplate", _args, callback, asyncState);
                return _result;
            }
            
            public Infocorp.TITA.SilverlightUI.WSTitaReference.GetIssueTemplateResponse EndGetIssueTemplate(System.IAsyncResult result) {
                object[] _args = new object[0];
                Infocorp.TITA.SilverlightUI.WSTitaReference.GetIssueTemplateResponse _result = ((Infocorp.TITA.SilverlightUI.WSTitaReference.GetIssueTemplateResponse)(base.EndInvoke("GetIssueTemplate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginModifyIssue(Infocorp.TITA.SilverlightUI.WSTitaReference.ModifyIssueRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("ModifyIssue", _args, callback, asyncState);
                return _result;
            }
            
            public Infocorp.TITA.SilverlightUI.WSTitaReference.ModifyIssueResponse EndModifyIssue(System.IAsyncResult result) {
                object[] _args = new object[0];
                Infocorp.TITA.SilverlightUI.WSTitaReference.ModifyIssueResponse _result = ((Infocorp.TITA.SilverlightUI.WSTitaReference.ModifyIssueResponse)(base.EndInvoke("ModifyIssue", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteIssue(int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("DeleteIssue", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDeleteIssue(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DeleteIssue", _args, result);
            }
        }
    }
}
