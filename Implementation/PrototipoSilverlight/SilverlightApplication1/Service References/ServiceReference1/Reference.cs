//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SilverlightApplication1.ServiceReference1 {
    
    
    [System.ServiceModel.ServiceContractAttribute()]
    public interface WebServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        System.IAsyncResult BeginHelloWorld(string texto, System.AsyncCallback callback, object asyncState);
        
        string EndHelloWorld(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetIssues", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(StockListItem))]
        System.IAsyncResult BeginGetIssues(System.AsyncCallback callback, object asyncState);
        
        IssueListItem[] EndGetIssues(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/UpdateIssue", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(StockListItem))]
        System.IAsyncResult BeginUpdateIssue(SilverlightApplication1.ServiceReference1.IssueListItem issue, System.AsyncCallback callback, object asyncState);
        
        string EndUpdateIssue(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/AddIssue", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(StockListItem))]
        System.IAsyncResult BeginAddIssue(SilverlightApplication1.ServiceReference1.IssueListItem issue, System.AsyncCallback callback, object asyncState);
        
        string EndAddIssue(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/DeleteIssue", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(StockListItem))]
        System.IAsyncResult BeginDeleteIssue(string id, System.AsyncCallback callback, object asyncState);
        
        string EndDeleteIssue(System.IAsyncResult result);
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class IssueListItem : StockListItem {
        
        private int ows_LinkIssueIDNoMenuField;
        
        private string ows_DescriptionField;
        
        private string ows_StatusField;
        
        private string ows_PriorityField;
        
        private float ows_OrdField;
        
        private string ows_CategoryField;
        
        private string ows_ReportedDateField;
        
        private string ows_WPField;
        
        private string ows_ReportedbyField;
        
        private string ows_ResolutionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int ows_LinkIssueIDNoMenu {
            get {
                return this.ows_LinkIssueIDNoMenuField;
            }
            set {
                this.ows_LinkIssueIDNoMenuField = value;
                this.RaisePropertyChanged("ows_LinkIssueIDNoMenu");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ows_Description {
            get {
                return this.ows_DescriptionField;
            }
            set {
                this.ows_DescriptionField = value;
                this.RaisePropertyChanged("ows_Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ows_Status {
            get {
                return this.ows_StatusField;
            }
            set {
                this.ows_StatusField = value;
                this.RaisePropertyChanged("ows_Status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ows_Priority {
            get {
                return this.ows_PriorityField;
            }
            set {
                this.ows_PriorityField = value;
                this.RaisePropertyChanged("ows_Priority");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float ows_Ord {
            get {
                return this.ows_OrdField;
            }
            set {
                this.ows_OrdField = value;
                this.RaisePropertyChanged("ows_Ord");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ows_Category {
            get {
                return this.ows_CategoryField;
            }
            set {
                this.ows_CategoryField = value;
                this.RaisePropertyChanged("ows_Category");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("ows_Reported Date")]
        public string ows_ReportedDate {
            get {
                return this.ows_ReportedDateField;
            }
            set {
                this.ows_ReportedDateField = value;
                this.RaisePropertyChanged("ows_ReportedDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ows_WP {
            get {
                return this.ows_WPField;
            }
            set {
                this.ows_WPField = value;
                this.RaisePropertyChanged("ows_WP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("ows_Reported by")]
        public string ows_Reportedby {
            get {
                return this.ows_ReportedbyField;
            }
            set {
                this.ows_ReportedbyField = value;
                this.RaisePropertyChanged("ows_Reportedby");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ows_Resolution {
            get {
                return this.ows_ResolutionField;
            }
            set {
                this.ows_ResolutionField = value;
                this.RaisePropertyChanged("ows_Resolution");
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IssueListItem))]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class StockListItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ows_TitleField;
        
        private int ows_AttachmentsField;
        
        private int ows_hiddenversionField;
        
        private int ows_IDField;
        
        private string ows_LinkTitleField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ows_Title {
            get {
                return this.ows_TitleField;
            }
            set {
                this.ows_TitleField = value;
                this.RaisePropertyChanged("ows_Title");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int ows_Attachments {
            get {
                return this.ows_AttachmentsField;
            }
            set {
                this.ows_AttachmentsField = value;
                this.RaisePropertyChanged("ows_Attachments");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int ows_hiddenversion {
            get {
                return this.ows_hiddenversionField;
            }
            set {
                this.ows_hiddenversionField = value;
                this.RaisePropertyChanged("ows_hiddenversion");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int ows_ID {
            get {
                return this.ows_IDField;
            }
            set {
                this.ows_IDField = value;
                this.RaisePropertyChanged("ows_ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ows_LinkTitle {
            get {
                return this.ows_LinkTitleField;
            }
            set {
                this.ows_LinkTitleField = value;
                this.RaisePropertyChanged("ows_LinkTitle");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    public interface WebServiceSoapChannel : SilverlightApplication1.ServiceReference1.WebServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class GetIssuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetIssuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IssueListItem[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IssueListItem[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class UpdateIssueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateIssueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class AddIssueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddIssueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class DeleteIssueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteIssueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public partial class WebServiceSoapClient : System.ServiceModel.ClientBase<SilverlightApplication1.ServiceReference1.WebServiceSoap>, SilverlightApplication1.ServiceReference1.WebServiceSoap {
        
        private BeginOperationDelegate onBeginHelloWorldDelegate;
        
        private EndOperationDelegate onEndHelloWorldDelegate;
        
        private System.Threading.SendOrPostCallback onHelloWorldCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetIssuesDelegate;
        
        private EndOperationDelegate onEndGetIssuesDelegate;
        
        private System.Threading.SendOrPostCallback onGetIssuesCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateIssueDelegate;
        
        private EndOperationDelegate onEndUpdateIssueDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateIssueCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddIssueDelegate;
        
        private EndOperationDelegate onEndAddIssueDelegate;
        
        private System.Threading.SendOrPostCallback onAddIssueCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteIssueDelegate;
        
        private EndOperationDelegate onEndDeleteIssueDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteIssueCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public WebServiceSoapClient() {
        }
        
        public WebServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<HelloWorldCompletedEventArgs> HelloWorldCompleted;
        
        public event System.EventHandler<GetIssuesCompletedEventArgs> GetIssuesCompleted;
        
        public event System.EventHandler<UpdateIssueCompletedEventArgs> UpdateIssueCompleted;
        
        public event System.EventHandler<AddIssueCompletedEventArgs> AddIssueCompleted;
        
        public event System.EventHandler<DeleteIssueCompletedEventArgs> DeleteIssueCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        System.IAsyncResult SilverlightApplication1.ServiceReference1.WebServiceSoap.BeginHelloWorld(string texto, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHelloWorld(texto, callback, asyncState);
        }
        
        string SilverlightApplication1.ServiceReference1.WebServiceSoap.EndHelloWorld(System.IAsyncResult result) {
            return base.Channel.EndHelloWorld(result);
        }
        
        private System.IAsyncResult OnBeginHelloWorld(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string texto = ((string)(inValues[0]));
            return ((SilverlightApplication1.ServiceReference1.WebServiceSoap)(this)).BeginHelloWorld(texto, callback, asyncState);
        }
        
        private object[] OnEndHelloWorld(System.IAsyncResult result) {
            string retVal = ((SilverlightApplication1.ServiceReference1.WebServiceSoap)(this)).EndHelloWorld(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHelloWorldCompleted(object state) {
            if ((this.HelloWorldCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HelloWorldAsync(string texto) {
            this.HelloWorldAsync(texto, null);
        }
        
        public void HelloWorldAsync(string texto, object userState) {
            if ((this.onBeginHelloWorldDelegate == null)) {
                this.onBeginHelloWorldDelegate = new BeginOperationDelegate(this.OnBeginHelloWorld);
            }
            if ((this.onEndHelloWorldDelegate == null)) {
                this.onEndHelloWorldDelegate = new EndOperationDelegate(this.OnEndHelloWorld);
            }
            if ((this.onHelloWorldCompletedDelegate == null)) {
                this.onHelloWorldCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHelloWorldCompleted);
            }
            base.InvokeAsync(this.onBeginHelloWorldDelegate, new object[] {
                        texto}, this.onEndHelloWorldDelegate, this.onHelloWorldCompletedDelegate, userState);
        }
        
        System.IAsyncResult SilverlightApplication1.ServiceReference1.WebServiceSoap.BeginGetIssues(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetIssues(callback, asyncState);
        }
        
        IssueListItem[] SilverlightApplication1.ServiceReference1.WebServiceSoap.EndGetIssues(System.IAsyncResult result) {
            return base.Channel.EndGetIssues(result);
        }
        
        private System.IAsyncResult OnBeginGetIssues(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SilverlightApplication1.ServiceReference1.WebServiceSoap)(this)).BeginGetIssues(callback, asyncState);
        }
        
        private object[] OnEndGetIssues(System.IAsyncResult result) {
            IssueListItem[] retVal = ((SilverlightApplication1.ServiceReference1.WebServiceSoap)(this)).EndGetIssues(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetIssuesCompleted(object state) {
            if ((this.GetIssuesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetIssuesCompleted(this, new GetIssuesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetIssuesAsync() {
            this.GetIssuesAsync(null);
        }
        
        public void GetIssuesAsync(object userState) {
            if ((this.onBeginGetIssuesDelegate == null)) {
                this.onBeginGetIssuesDelegate = new BeginOperationDelegate(this.OnBeginGetIssues);
            }
            if ((this.onEndGetIssuesDelegate == null)) {
                this.onEndGetIssuesDelegate = new EndOperationDelegate(this.OnEndGetIssues);
            }
            if ((this.onGetIssuesCompletedDelegate == null)) {
                this.onGetIssuesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetIssuesCompleted);
            }
            base.InvokeAsync(this.onBeginGetIssuesDelegate, null, this.onEndGetIssuesDelegate, this.onGetIssuesCompletedDelegate, userState);
        }
        
        System.IAsyncResult SilverlightApplication1.ServiceReference1.WebServiceSoap.BeginUpdateIssue(SilverlightApplication1.ServiceReference1.IssueListItem issue, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateIssue(issue, callback, asyncState);
        }
        
        string SilverlightApplication1.ServiceReference1.WebServiceSoap.EndUpdateIssue(System.IAsyncResult result) {
            return base.Channel.EndUpdateIssue(result);
        }
        
        private System.IAsyncResult OnBeginUpdateIssue(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SilverlightApplication1.ServiceReference1.IssueListItem issue = ((SilverlightApplication1.ServiceReference1.IssueListItem)(inValues[0]));
            return ((SilverlightApplication1.ServiceReference1.WebServiceSoap)(this)).BeginUpdateIssue(issue, callback, asyncState);
        }
        
        private object[] OnEndUpdateIssue(System.IAsyncResult result) {
            string retVal = ((SilverlightApplication1.ServiceReference1.WebServiceSoap)(this)).EndUpdateIssue(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateIssueCompleted(object state) {
            if ((this.UpdateIssueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateIssueCompleted(this, new UpdateIssueCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateIssueAsync(SilverlightApplication1.ServiceReference1.IssueListItem issue) {
            this.UpdateIssueAsync(issue, null);
        }
        
        public void UpdateIssueAsync(SilverlightApplication1.ServiceReference1.IssueListItem issue, object userState) {
            if ((this.onBeginUpdateIssueDelegate == null)) {
                this.onBeginUpdateIssueDelegate = new BeginOperationDelegate(this.OnBeginUpdateIssue);
            }
            if ((this.onEndUpdateIssueDelegate == null)) {
                this.onEndUpdateIssueDelegate = new EndOperationDelegate(this.OnEndUpdateIssue);
            }
            if ((this.onUpdateIssueCompletedDelegate == null)) {
                this.onUpdateIssueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateIssueCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateIssueDelegate, new object[] {
                        issue}, this.onEndUpdateIssueDelegate, this.onUpdateIssueCompletedDelegate, userState);
        }
        
        System.IAsyncResult SilverlightApplication1.ServiceReference1.WebServiceSoap.BeginAddIssue(SilverlightApplication1.ServiceReference1.IssueListItem issue, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddIssue(issue, callback, asyncState);
        }
        
        string SilverlightApplication1.ServiceReference1.WebServiceSoap.EndAddIssue(System.IAsyncResult result) {
            return base.Channel.EndAddIssue(result);
        }
        
        private System.IAsyncResult OnBeginAddIssue(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SilverlightApplication1.ServiceReference1.IssueListItem issue = ((SilverlightApplication1.ServiceReference1.IssueListItem)(inValues[0]));
            return ((SilverlightApplication1.ServiceReference1.WebServiceSoap)(this)).BeginAddIssue(issue, callback, asyncState);
        }
        
        private object[] OnEndAddIssue(System.IAsyncResult result) {
            string retVal = ((SilverlightApplication1.ServiceReference1.WebServiceSoap)(this)).EndAddIssue(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddIssueCompleted(object state) {
            if ((this.AddIssueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddIssueCompleted(this, new AddIssueCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddIssueAsync(SilverlightApplication1.ServiceReference1.IssueListItem issue) {
            this.AddIssueAsync(issue, null);
        }
        
        public void AddIssueAsync(SilverlightApplication1.ServiceReference1.IssueListItem issue, object userState) {
            if ((this.onBeginAddIssueDelegate == null)) {
                this.onBeginAddIssueDelegate = new BeginOperationDelegate(this.OnBeginAddIssue);
            }
            if ((this.onEndAddIssueDelegate == null)) {
                this.onEndAddIssueDelegate = new EndOperationDelegate(this.OnEndAddIssue);
            }
            if ((this.onAddIssueCompletedDelegate == null)) {
                this.onAddIssueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddIssueCompleted);
            }
            base.InvokeAsync(this.onBeginAddIssueDelegate, new object[] {
                        issue}, this.onEndAddIssueDelegate, this.onAddIssueCompletedDelegate, userState);
        }
        
        System.IAsyncResult SilverlightApplication1.ServiceReference1.WebServiceSoap.BeginDeleteIssue(string id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteIssue(id, callback, asyncState);
        }
        
        string SilverlightApplication1.ServiceReference1.WebServiceSoap.EndDeleteIssue(System.IAsyncResult result) {
            return base.Channel.EndDeleteIssue(result);
        }
        
        private System.IAsyncResult OnBeginDeleteIssue(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string id = ((string)(inValues[0]));
            return ((SilverlightApplication1.ServiceReference1.WebServiceSoap)(this)).BeginDeleteIssue(id, callback, asyncState);
        }
        
        private object[] OnEndDeleteIssue(System.IAsyncResult result) {
            string retVal = ((SilverlightApplication1.ServiceReference1.WebServiceSoap)(this)).EndDeleteIssue(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteIssueCompleted(object state) {
            if ((this.DeleteIssueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteIssueCompleted(this, new DeleteIssueCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteIssueAsync(string id) {
            this.DeleteIssueAsync(id, null);
        }
        
        public void DeleteIssueAsync(string id, object userState) {
            if ((this.onBeginDeleteIssueDelegate == null)) {
                this.onBeginDeleteIssueDelegate = new BeginOperationDelegate(this.OnBeginDeleteIssue);
            }
            if ((this.onEndDeleteIssueDelegate == null)) {
                this.onEndDeleteIssueDelegate = new EndOperationDelegate(this.OnEndDeleteIssue);
            }
            if ((this.onDeleteIssueCompletedDelegate == null)) {
                this.onDeleteIssueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteIssueCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteIssueDelegate, new object[] {
                        id}, this.onEndDeleteIssueDelegate, this.onDeleteIssueCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SilverlightApplication1.ServiceReference1.WebServiceSoap CreateChannel() {
            return new WebServiceSoapClientChannel(this);
        }
        
        private class WebServiceSoapClientChannel : ChannelBase<SilverlightApplication1.ServiceReference1.WebServiceSoap>, SilverlightApplication1.ServiceReference1.WebServiceSoap {
            
            public WebServiceSoapClientChannel(System.ServiceModel.ClientBase<SilverlightApplication1.ServiceReference1.WebServiceSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginHelloWorld(string texto, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = texto;
                System.IAsyncResult _result = base.BeginInvoke("HelloWorld", _args, callback, asyncState);
                return _result;
            }
            
            public string EndHelloWorld(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("HelloWorld", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetIssues(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetIssues", _args, callback, asyncState);
                return _result;
            }
            
            public IssueListItem[] EndGetIssues(System.IAsyncResult result) {
                object[] _args = new object[0];
                IssueListItem[] _result = ((IssueListItem[])(base.EndInvoke("GetIssues", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateIssue(SilverlightApplication1.ServiceReference1.IssueListItem issue, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = issue;
                System.IAsyncResult _result = base.BeginInvoke("UpdateIssue", _args, callback, asyncState);
                return _result;
            }
            
            public string EndUpdateIssue(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("UpdateIssue", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddIssue(SilverlightApplication1.ServiceReference1.IssueListItem issue, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = issue;
                System.IAsyncResult _result = base.BeginInvoke("AddIssue", _args, callback, asyncState);
                return _result;
            }
            
            public string EndAddIssue(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("AddIssue", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteIssue(string id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("DeleteIssue", _args, callback, asyncState);
                return _result;
            }
            
            public string EndDeleteIssue(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("DeleteIssue", _args, result)));
                return _result;
            }
        }
    }
}
